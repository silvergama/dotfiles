#!/bin/sh

function gitsync() {
    git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -D
}

function greview() {
    git fetch -u origin pull/$1/head:pr$1 & \
    git checkout pr$1
}

function gdreview() {
    git checkout master & \
    git branch -D pr$1 & \
    git checkout -
}

gocover () {
	t="/tmp/go-cover.$$.tmp"
	go test -flags="all" -coverprofile=$t $@ && \
	go tool cover -html=$t && \
    rm $t
}

# Create a new directory and enter it
function mkd() {
	mkdir -p "$@" && cd "$_";
}

# Determine size of a file or total size of a directory
function fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* ./*;
	fi;
}

function getJobs()
{
   kubectl get jobs -n properties
}

function deleteJob()
{
    kubectl delete job -n properties $1
}

function getPods() {
    kubectl get pods -n properties
}

function getLogs()
{
    kubectl logs -f -n properties $1
}

gocover () {
	t="/tmp/go-cover.$$.tmp"
	go test -coverprofile=$t $@ && \
	go tool cover -html=$t && \
    rm $t
}

function gitstash() {
    git stash push -m "zsh_stash_name_$1"
}

function gitstashapply() {
    git stash apply $(git stash list | grep "zsh_stash_name_$1" | cut -d: -f1)
}

function gitstashpop() {
    git stash pop $(git stash list | grep "zsh_stash_name_$1" | cut -d: -f1)
}
function gitstashdrop() {
    git stash drop $(git stash list | grep "zsh_stash_name_$1" | cut -d: -f1)
}
