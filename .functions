#!/bin/sh

gocover () {
	t="/tmp/go-cover.$$.tmp"
	go test -flags="all" -coverprofile=$t $@ && \
	go tool cover -html=$t && \
    rm $t
}

# Create a new directory and enter it
mkd() {
	mkdir -p "$@" && cd "$_";
}

# Determine size of a file or total size of a directory
fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* ./*;
	fi;
}


###################### Docker functions ######################
dexec(){
  docker exec -it $1 $2
}

###################### Docker Compose functions ######################

dcu(){
  docker-compose up $1 $2
}

dcd(){
  docker-compose down $1
}

###################### K8S functions ######################

getJobs(){
   kubectl get jobs -n $1
}

deleteJob(){
    kubectl delete job -n $1 $2
}

getPods() {
    kubectl get pods -n $1
}

getLogs(){
    kubectl logs -f -n $1 $2
}

###################### Git functions ######################
updateBranch() {
    git fetch --all
    git reset --hard FETCH_HEAD
    git pull
}

gitsync() {
    git checkout $1;
    git remote prune origin;
    git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -D;
    git checkout -
}

gstash() {
    git stash push -m "zsh_stash_name_$1" $2
}

gstashapply() {
    git stash apply $(git stash list | grep "zsh_stash_name_$1" | cut -d: -f1)
}

gstashpop() {
    git stash pop $(git stash list | grep "zsh_stash_name_$1" | cut -d: -f1)
}
gstashdrop() {
    git stash drop $(git stash list | grep "zsh_stash_name_$1" | cut -d: -f1)
}

tre() {
    tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX;
}
